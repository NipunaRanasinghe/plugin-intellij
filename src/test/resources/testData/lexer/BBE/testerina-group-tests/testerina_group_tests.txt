import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('test')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Test function, which belongs to `g1`')
WHITE_SPACE ('\n')
@ ('@')
identifier ('test')
: (':')
identifier ('Config')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('groups')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"g1"')
] (']')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('testFunction1')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"I'm in test belonging to g1!"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('test')
: (':')
identifier ('assertTrue')
( ('(')
BOOLEAN_LITERAL ('true')
, (',')
WHITE_SPACE (' ')
identifier ('msg')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Failed!"')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// Test function, which belongs to `g1`, and `g2`')
WHITE_SPACE ('\n')
@ ('@')
identifier ('test')
: (':')
identifier ('Config')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('groups')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"g1"')
, (',')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"g2"')
] (']')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('testFunction2')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"I'm in test belonging to g1 and g2!"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('test')
: (':')
identifier ('assertTrue')
( ('(')
BOOLEAN_LITERAL ('true')
, (',')
WHITE_SPACE (' ')
identifier ('msg')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Failed!"')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
WHITE_SPACE ('\n\n')
LINE_COMMENT ('// This test doesn't belong to any group')
WHITE_SPACE ('\n')
@ ('@')
identifier ('test')
: (':')
identifier ('Config')
WHITE_SPACE ('\n')
function ('function')
WHITE_SPACE (' ')
identifier ('testFunction3')
( ('(')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
identifier ('io')
: (':')
identifier ('println')
( ('(')
QUOTED_STRING_LITERAL ('"I'm the ungrouped test"')
) (')')
; (';')
WHITE_SPACE ('\n    ')
identifier ('test')
: (':')
identifier ('assertTrue')
( ('(')
BOOLEAN_LITERAL ('true')
, (',')
WHITE_SPACE (' ')
identifier ('msg')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Failed!"')
) (')')
; (';')
WHITE_SPACE ('\n')
} ('}')
