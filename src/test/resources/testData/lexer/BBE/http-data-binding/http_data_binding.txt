import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('http')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('io')
; (';')
WHITE_SPACE ('\n')
import ('import')
WHITE_SPACE (' ')
identifier ('ballerina')
/ ('/')
identifier ('log')
; (';')
WHITE_SPACE ('\n\n')
type ('type')
WHITE_SPACE (' ')
identifier ('Student')
WHITE_SPACE (' ')
record ('record')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('Name')
; (';')
WHITE_SPACE ('\n    ')
int ('int')
WHITE_SPACE (' ')
identifier ('Grade')
; (';')
WHITE_SPACE ('\n    ')
map ('map')
WHITE_SPACE (' ')
identifier ('Marks')
; (';')
WHITE_SPACE ('\n')
} ('}')
; (';')
WHITE_SPACE ('\n\n')
@ ('@')
identifier ('http')
: (':')
identifier ('ServiceConfig')
WHITE_SPACE ('\n')
service ('service')
< ('<')
identifier ('http')
: (':')
identifier ('Service')
> ('>')
WHITE_SPACE (' ')
identifier ('hello')
WHITE_SPACE (' ')
bind ('bind')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('port')
: (':')
WHITE_SPACE (' ')
DECIMAL_INTEGER_LITERAL ('9090')
WHITE_SPACE (' ')
} ('}')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n\n    ')
string ('string')
WHITE_SPACE (' ')
identifier ('respErr')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"Failed to respond to the caller"')
; (';')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//The 'body' annotation represents the entity body of the inbound request.')
WHITE_SPACE ('\n    ')
@ ('@')
identifier ('http')
: (':')
identifier ('ResourceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('methods')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"POST"')
] (']')
, (',')
WHITE_SPACE ('\n        ')
identifier ('body')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"orderDetails"')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
identifier ('bindJson')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Request')
WHITE_SPACE (' ')
identifier ('req')
, (',')
WHITE_SPACE (' ')
json ('json')
WHITE_SPACE (' ')
identifier ('orderDetails')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('//Access the JSON field values.')
WHITE_SPACE ('\n        ')
json ('json')
WHITE_SPACE (' ')
identifier ('details')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('orderDetails')
. ('.')
identifier ('Details')
; (';')
WHITE_SPACE ('\n\n        ')
identifier ('http')
: (':')
identifier ('Response')
WHITE_SPACE (' ')
identifier ('res')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n        ')
identifier ('res')
. ('.')
identifier ('setPayload')
( ('(')
identifier ('details')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('caller')
-> ('->')
identifier ('respond')
( ('(')
identifier ('res')
) (')')
WHITE_SPACE (' ')
but ('but')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
identifier ('respErr')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//Bind the XML payload of the inbound request to the `store` variable.')
WHITE_SPACE ('\n    ')
@ ('@')
identifier ('http')
: (':')
identifier ('ResourceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('methods')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"POST"')
] (']')
, (',')
WHITE_SPACE ('\n        ')
identifier ('body')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"store"')
, (',')
WHITE_SPACE ('\n        ')
identifier ('consumes')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"application/xml"')
] (']')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
identifier ('bindXML')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Request')
WHITE_SPACE (' ')
identifier ('req')
, (',')
WHITE_SPACE (' ')
xml ('xml')
WHITE_SPACE (' ')
identifier ('store')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('//Access the XML content.')
WHITE_SPACE ('\n        ')
xml ('xml')
WHITE_SPACE (' ')
identifier ('city')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('store')
. ('.')
identifier ('selectDescendants')
( ('(')
QUOTED_STRING_LITERAL ('"{http://www.test.com}city"')
) (')')
; (';')
WHITE_SPACE ('\n\n        ')
identifier ('http')
: (':')
identifier ('Response')
WHITE_SPACE (' ')
identifier ('res')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n        ')
identifier ('res')
. ('.')
identifier ('setPayload')
( ('(')
identifier ('city')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('caller')
-> ('->')
identifier ('respond')
( ('(')
identifier ('res')
) (')')
WHITE_SPACE (' ')
but ('but')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
identifier ('respErr')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n\n    ')
LINE_COMMENT ('//Bind the JSON payload to a custom struct. The payload's content should match the struct.')
WHITE_SPACE ('\n    ')
@ ('@')
identifier ('http')
: (':')
identifier ('ResourceConfig')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
identifier ('methods')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"POST"')
] (']')
, (',')
WHITE_SPACE ('\n        ')
identifier ('body')
: (':')
WHITE_SPACE (' ')
QUOTED_STRING_LITERAL ('"student"')
, (',')
WHITE_SPACE ('\n        ')
identifier ('consumes')
: (':')
WHITE_SPACE (' ')
[ ('[')
QUOTED_STRING_LITERAL ('"application/json"')
] (']')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n    ')
identifier ('bindStruct')
( ('(')
endpoint ('endpoint')
WHITE_SPACE (' ')
identifier ('caller')
, (',')
WHITE_SPACE (' ')
identifier ('http')
: (':')
identifier ('Request')
WHITE_SPACE (' ')
identifier ('req')
, (',')
WHITE_SPACE (' ')
identifier ('Student')
WHITE_SPACE (' ')
identifier ('student')
) (')')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE ('\n        ')
LINE_COMMENT ('//Access the fields of the struct 'Student'.')
WHITE_SPACE ('\n        ')
string ('string')
WHITE_SPACE (' ')
identifier ('name')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('student')
. ('.')
identifier ('Name')
; (';')
WHITE_SPACE ('\n\n        ')
int ('int')
WHITE_SPACE (' ')
identifier ('grade')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('student')
. ('.')
identifier ('Grade')
; (';')
WHITE_SPACE ('\n\n        ')
identifier ('http')
: (':')
identifier ('Response')
WHITE_SPACE (' ')
identifier ('res')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
new ('new')
; (';')
WHITE_SPACE ('\n        ')
identifier ('res')
. ('.')
identifier ('setPayload')
( ('(')
{ ('{')
WHITE_SPACE (' ')
identifier ('Name')
: (':')
WHITE_SPACE (' ')
identifier ('name')
, (',')
WHITE_SPACE (' ')
identifier ('Grade')
: (':')
WHITE_SPACE (' ')
identifier ('grade')
WHITE_SPACE (' ')
} ('}')
) (')')
; (';')
WHITE_SPACE ('\n        ')
identifier ('caller')
-> ('->')
identifier ('respond')
( ('(')
identifier ('res')
) (')')
WHITE_SPACE (' ')
but ('but')
WHITE_SPACE (' ')
{ ('{')
WHITE_SPACE (' ')
identifier ('error')
WHITE_SPACE (' ')
identifier ('e')
WHITE_SPACE (' ')
=> ('=>')
WHITE_SPACE (' ')
identifier ('log')
: (':')
identifier ('printError')
( ('(')
identifier ('respErr')
, (',')
WHITE_SPACE (' ')
identifier ('err')
WHITE_SPACE (' ')
= ('=')
WHITE_SPACE (' ')
identifier ('e')
) (')')
WHITE_SPACE (' ')
} ('}')
; (';')
WHITE_SPACE ('\n    ')
} ('}')
WHITE_SPACE ('\n')
} ('}')
